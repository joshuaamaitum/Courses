# Select a dataframe subset with 1 column
selec = data[6:10,c("LA","FA")]
selec
# Select a dataframe subset with 1 column
selec = data[6:10,c("FA")]
selec
# Select a dataframe subset with 1 column
selec = data[6:10,c("LA")]
selec
# Select the data from French Guiana & France
french = data[c("French Guiana","France"),]
french
names(data)
titles(names(data))
titles[names(data),]
data[data$Continent=="Asia",]
head(data)
data[data$Continent>=500000]
data[data$Continent>=500000,]
data[data$LA>=500000,]
summary(data)
table[data$Continent]
table(data$Continent)
vn = data(sapply, is.numeric())
vn
vn = data(sapply, is.numeric)
vn
table(data$Continent) # Frequency of factor variables
vn = which(data(sapply, is.numeric))
vn
Vn = which(sapply(data, is.numeric)) # Determine the position of the numeric variables
Vn
vn = sapply(data, is.numeric)
vn
table(data$Continent) # Frequency of factor variables
vn = which(sapply(data, is.numeric))
vn
datanum = data[,vn]
datanum
head(datanum)
# Apply statistics
apply(datanum,2,min)
apply(datanum,2,quantile)
apply(datanum,2,max)
# Apply statistics (affected by missing values)
apply(datanum,2,min)
apply(datanum,2,max)
apply(datanum,2,quantile)
# Deal with the missing values
apply(datanum,2,min,na.rm=T)
apply(datanum,2,max,na.rm=T)
# Deal with the missing values
Sapply(datanum,2,min,na.rm=T)
# Deal with the missing values
apply(datanum,2,min,na.rm=T)
summary(data)
table(data$Continent) # Frequency of factor variables
vn = which(sapply(data, is.numeric)) # Identify the numeric variables
vn
datanum = data[,vn] # Table without factor variables
head(datanum)
# Apply statistics (affected by missing values)
apply(datanum,2,min)
apply(datanum,2,max)
apply(datanum,2,quantile)
# Deal with the missing values
apply(datanum,2,min,na.rm=T)
apply(datanum,2,max,na.rm=T)
apply(datanum,2,mean,na.rm=T)
apply(datanum,2,sd,na.rm=T)
apply(datanum,2,quantile)
apply(datanum,2,quantile,na.rm=T)
# Deal with the missing values
apply(datanum,2,min,na.rm=T)
apply(datanum,2,max,na.rm=T)
apply(datanum,2,mean,na.rm=T)
apply(datanum,2,sd,na.rm=T)
apply(datanum,2,quantile,na.rm=T)
# Deal with the missing values
apply(datanum,2,min,na.rm=T)
apply(datanum,2,max,na.rm=T)
apply(datanum,2,sd,na.rm=T)
apply(datanum,2,mean,na.rm=T)
apply(datanum,2,quantile,na.rm=T)
rm(list = ls()) #Clean R's memory
# Setting the working directory
setwd("G:/My Drive/GitHub Desktop/Courses/Tutorial_R") # Update working directory
# Reading the first data set and the titles
data = read.csv2("FRA_data1.csv",row.names=1)
titles = read.csv2("FRA_titles.csv",row.names=1)
str(data) # Structure of the object
nrow(data) # No. of rows
ncol(data) # No. of columns
dim(data) # No. of rows & columns
names(data) # Names of columns
rownames(data) # Names of rows
head(data) # First 6 rows
tail(data) # Last 6 rows
head(titles) # First 6 rows
class(data) # Type of object
sapply(data, is.factor) # Tracking the factor variables
sapply(data, class) # Identifying variable types
is.factor(data) # Checks if variable is a factor
is.numeric(data) # Checks if variable is numeric
which(data) # Returns list of elements having a true value
Vn = which(sapply(data, is.numeric)) # Determine the position of the numeric variables
Vn
head(data) # First 6 rows of data
data[3,] # Extract a single row, e.g. 3
data[c(1:3,6),] # Extract several specific rows
data[,1] # Extract a single column, e.g. 1
data[1:5,1:2] # Select ranges of specific rows & columns
data[c(10:15,30:35),1:2] # Select ranges of specific rows & columns
data[10:20,-3] # Selection by removing specific row
data[50:60,-c(2,3)] # Selection by removing several rows
data[-c(1:3,6:230),] # Selection by removing rows 1-3 and 6-230
data[-(11:nrow(data)),] # Selection by removing all rows from the 11th to the last
data[c(71,82,127,130,169),] # Selection of French overseas territories
head(data)
data["Algeria",] # Selection with a row name
data["Uganda",]
# Same selection with an abbreviation of the row name
data["Alg",]
data["Uga",]
data[c("Ken","Uga","Tan","Rwa","Buru"),] # Select a list of rows
head(data)
data[,"Continent"] # Selection of a variable
data$Continent
# Select a dataframe subset with a 2 columns
selec = data[1:5,c("LA","FA")]
selec
class(selec) # Type of object
# Select a dataframe subset with 1 column
selec = data[6:10,c("LA")]
selec
# Select the data from French Guiana & France
french = data[c("French Guiana","France"),]
french
head(data)
data[data$Continent=="Asia",] # Select all data from a continent
data[data$LA>=500000,] # Select countries with LA above 500000
summary(data)
table(data$Continent) # Frequency of factor variables
vn = which(sapply(data, is.numeric)) # Identify the numeric variables
vn
datanum = data[,vn] # Table without factor variables
head(datanum)
# Apply statistics (affected by missing values)
apply(datanum,2,min)
apply(datanum,2,max)
apply(datanum,2,quantile)
# Deal with the missing values
apply(datanum,2,min,na.rm=T)
apply(datanum,2,max,na.rm=T)
apply(datanum,2,sd,na.rm=T)
apply(datanum,2,mean,na.rm=T)
apply(datanum,2,quantile,na.rm=T)
MV = is.na(data) # TRUE is place of NA & FALSE else where
head(MV)
sum(MV)
sum(MV) # Sum of missing values
MVv = apply(MV,2,sum)
MVv
MVr = apply(MV,1,sum)
MVr
# Apply statistics (affected by missing values)
apply(datanum,2,min)
apply(datanum,2,max)
apply(datanum,2,quantile)
MV = is.na(data) # TRUE is place of NA & FALSE else where
head(MV)
sum(MV) # Sum of missing values
MVv = apply(MV,2,sum) # Number of missing values per variable
MVv
MVr = apply(MV,1,sum) # Number of missing values per row
MVr
table(MVr)
data[MVr>0,]
# Question 13
dataw = data[MVr==0,]
dataw
dim(dataw);dim(data)
data1 = na.omit(data)
dim(dataw);dim(data)
MV
# Replace all missing values (TRUE) with a zero
MV = is.na(data)
# Replace all missing values (TRUE) with a zero
MV = is.na(data)
data[MV]=0
summary(data)
dim(dataw);dim(data)
View(data)
data$FCR >- data$FA/data$LA # For example forest cover rate from FA & LA
summary(data)
head(data)
warnings()
data$FCR >- data$FA/data$LA # For example forest cover rate from FA & LA
summary(data)
head(data)
head(data)
data$FCR = data$FA / data$LA # For example forest cover rate from FA & LA
summary(data)
head(data)
# Create transformed variables
data$LAlog -> log10(data$LA)
# Create transformed variables
data$LAlog = log10(data$LA)
data$FAlog = log10(data$FA)
summary(data)
# Avoid infinite values in transformed functions
data$LAlog <- log10(data$LA+1)
data$FAlog <- log10(data$FA+1)
summary(data)
# Ordering rows by increasing order of forest cover
data[order(data$FCR),c("Continent","FCR")]
head(data)
# Order by decreasing forest cover
data[order(data$FCR, decreasing=T),c("Continent","FCR")]
# Select top 10 forest cover rate countries
fcr <- data[order(data$FCR, decreasing=t),c("Contienet","FCR")][1:10]
# Select top 10 forest cover rate countries
fcr <- data[order(data$FCR, decreasing=t),c("Contienet","FCR")][1:10,]
fcr
# Select top 10 forest cover rate countries
fcr <- data[order(data$FCR, decreasing=t),c("Continent","FCR")][1:10,]
fcr
# Select top 10 forest cover rate countries
fcr <- data[order(data$FCR, decreasing=T),c("Continent","FCR")][1:10,]
fcr
# Land and forest cover per continent
head(data)
# Land and forest cover per continent
head(data)
continents = aggregate(data[,2:3],list(data$Continent), sum, na.rm=T)
continents
# Transfer names of continents to row names and remove the first column
rownames(continents) = continents[,1]
continents
continents[,-1]
continents
continents
continents[,-1]
continents
continents
continents = continents[,-1]
continents
# Forest cover rate per continent
head(continents)
continents$FCR = continents$FA / continents$LA
continents
continents = continents[order(continents$FCR,decreasing = T),]
continents
# Compute average forest area per continent
continents
# Compute average forest area per continent
continents = aggregate(data[,])
# Compute average forest area per continent
head(data)
# Compute average land and forest area per continent
head(data)
continents = aggregate(data[,2:3], list(data$Continent), mean, na.rm=T)
continents
# Compute average land and forest area per continent
head(data)
continents = aggregate(data[,2:3], list(data$Continent), mean, na.rm=T)
continents
# Land and forest cover per continent
head(data)
continents = aggregate(data[,2:3],list(data$Continent), sum, na.rm=T)
continents
# Transfer names of continents to row names and remove the first column
rownames(continents) = continents[,1]
continents
continents = continents[,-1]
continents
# Forest cover rate per continent
head(continents)
continents$FCR = continents$FA / continents$LA
continents
continents = continents[order(continents$FCR,decreasing = T),]
continents
# Pie chart of forest area per continent
pie(continents$FA)
# Pie chart of forest area per continent
pie(continents$FA, main="Forest area / Continent")
# Pie chart of forest area per continent
pie(continents$FA,main="Forest area / Continent",labels=rownames(continents))
# Bar chart of forest area per continent
barplot(continents$FA)
# Bar chart of forest area per continent
barplot(continents$FA, main="Forest Area / Continent")
# Bar chart of forest area per continent
barplot(continents$FA,main="Forest Area / Continent",labels=rownames(continents))
# Bar chart of forest area per continent
barplot(continents$FA,main="Forest Area / Continent",names=rownames(continents))
# Make the thickness of the barplots proportional to land area
barplot(continents$FA,main="Forest Area / Continent",
width=continents$LA)
# Make the thickness of the barplots proportional to land area
barplot(continents$FA,main="Forest Area / Continent",
width=continents$LA,names=rownames(continents))
# Make the thickness of the barplots proportional to land area
barplot(continents$FA,main="Forest Area / Continent",
width=continents$LA,names=rownames(continents),
ylab="Forest cover rate")
# Make the thickness of the barplots proportional to land area
barplot(continents$FA,main="Forest Area / Continent",
width=continents$LA,names=rownames(continents),
ylab="Forest cover rate",
xlab="Continents")
# Make the thickness of the barplots proportional to land area
barplot(continents$FCR,main="Forest Cover Rate / Continent",
width=continents$LA,names=rownames(continents),
ylab="Forest cover rate",
xlab="Continents")
# Include the mean forest cover rate (global average)
FCRw = sum(continents$FA)/sum(continents$LA)
abline(h=FCRw, col="red", Ity=2)
mtext(paste("Global FC rate :",round(FCRw*100,1),"%"),line=-4,col="red")
# Territories per continent
table(data$Continent)
piechart(table(data$Continent))
pie(table(data$Continent))
pie(table(data$Continent), main="Number of Territories")
barplot(table(data$Continent, main="Number of Territories"))
barplot(table(data$Continent), main="Number of Territories")
setwd("G:/My Drive/GitHub Desktop/Courses/Tutorial_R")
# Set the working directory
setwd("G:/My Drive/GitHub Desktop/Courses/Tutorial_R")
# Import the file
data1 = read.csv2("FRA_data2.csv", row.names = T)
# Import the file
data1 = read.csv2("FRA_data2.csv", row.names=1)
# 21. For how many territories do we have data
nrow(data1)
View(data1)
# 22. How many factor variables do we have
Vf = is.factor(data1)
Vf
summary(data)
names(data1)
# 22. How many factor variables do we have
sapply(data1, is.factor)
# 22. How many factor variables do we have
sapply(data1, class)
# 23. # How many levels have the variable climate
table(data1$Climate)
# 24. What do contain the rownames
rownames(data1)
# 25. How many numeric / integer variables do we have
str(data1)
sapply(data1, class)
# 26. What is the minimum value of forest area
forest_area = data1$FA
str()
forest_area
sapply(forest_area, min)
# 26. What is the minimum value of forest area
forest_area = data1(order[,data1$FA])
forest_area
# 26. What is the minimum value of forest area
forest_area = data1[order(data1$FA),]
forest_area
# 26. What is the minimum value of forest area
forest_area = data1[order(data1$FA),]
head(forest_area)
# 28. Which territory has the highest forest area change
names(data1)
data1$FAC = data1$FA / data1$LA
head(data1)
fac = data1[order(data1$FAC,decreasing=T),]
head(fac)
names = read.csv2("FRA_titles.csv",row.names=1)
View(names)
rm(list =ls()) # Clean R's memory
# Set the working directory
setwd("G:/My Drive/GitHub Desktop/Courses/Tutorial_R")
# Import the file
data1 = read.csv2("FRA_data2.csv", row.names=1)
names = read.csv2("FRA_titles.csv",row.names=1)
# 21. For how many territories do we have data
nrow(data1)
# 22. How many factor variables do we have
sapply(data1, class)
# 23. # How many levels have the variable climate
table(data1$Climate)
# 24. What do contain the rownames
rownames(data1)
# 25. How many numeric / integer variables do we have
str(data1)
sapply(data1, class)
# 26. What is the minimum value of Forest Area (FA)
forest_area = data1[order(data1$FA),]
head(forest_area)
# 28. Which territory has the highest forest area change
names(data1)
FAC = data1[order(data1$FAC,decreasing=T),]
head(FAC)
# 29. Which territory has the lowest forest area change
FAC = data1[order(data1$FAC),]
head(FAC)
# 30. The 3 variables having more than 40 missing values
MV = is.na(data1)
table(MV)
sum(MV)
table(MV)
sapply(MV,1,sum)
# 30. The 3 variables having more than 40 missing values
MV = is.na(data1)
MVr = apply(MV,1,sum)
table(MVr)
MVc = apply(MV,2,sum)
table(MVc)
MVr
# 30. The 3 variables having more than 40 missing values
MV = is.na(data1)
MVr = apply(MV,1,sum)
table(MVr)
MVc = apply(MV,2,sum)
table(MVc)
# 30. The 3 variables having more than 40 missing values
MV = is.na(data1)
sum(MV)
table(MV)
MVr = apply(MV,1,sum)
table(MVr)
data1[MVr>0,]
table(data1[MVr>0,])
data1[MVr>0,]
data1[,MVc>0]
table(data1[,MVc>0])
MVr
MVc
# 30. The 3 variables having more than 40 missing values
MV = is.na(data1)
sum(MV)
table(MV)
# 30. The 3 variables having more than 40 missing values
MV = is.na(data1)
sum(MV)
MVr = apply(MV,1,sum)
MVr
MVc = apply(MV,2,sum)
MVc
# 31. How many countries have no missing values
data1[MV=0,]
# 31. How many countries have no missing values
data1[MV==0,]
# 31. How many countries have no missing values
data1n = data1[MV==0,]
nrow(data1n)
data1n
dim(data1n);dim(data1)
# 31. How many countries have no missing values
data1n = data1[MV==0,]
data1n
dim(data1n);dim(data1)
data1n = na.omit(data1)
dim(data1n);dim(data1)
nrowdata(1)
nrow(data1)
# 30. The 3 variables having more than 40 missing values
MV = is.na(data1)
sum(MV)
MVr = apply(MV,1,sum)
MVr
# 31. How many countries have no missing values
table(MVr)
# 32. Identify the countries with 5 missing values
data1[MVr==5,]
# 32. Identify the countries with 5 missing values
data1[MVr=>5,]
# 32. Identify the countries with 5 missing values
data1[MVr>5,]
# 33. Under which climate are woodlands & vegetation types common
names(data1)
owa = aggregate(data1[,data1$Continent],"OWA")
owa = aggregate(data1[,6], list(data1$Continent), sum, na.rm=T)
owa
owa = aggregate(data1[,6], list(data1$Climate), sum, na.rm=T)
owa
# 34. Which climate displays two-thirds of the world's biomass
names(data1)
bio = aggregate(data1[,15], list(data1$Climate), sum, na.rm=T)
bio
# 35. Under what climate do we find more than half of the world's forest plantations
names(data1)
pla = aggregate(data1[,9],list(data1$Climate), sum, na.rm=T)
pla
# 36. Under what climate do we find half of the world's primary forests
names(data1)
pri = aggregate(data1[,8], list(data1$Climate), sum, na.rm=T)
pri
# 37. Climate with more than 60% of the world's coniferous forest volume
names(data1)
con = aggregate(data1[,12], list(data1$Climate), sum, na.rm=T)
con
# 38. Climate with forest area decrease of 4 million hectares per year
names(data1)
fac = aggregate(data1[,7], list(data1$Climate), sum, na.rm=t)
fac
# 39. Forests having the lowest species diversity
names(data1)
div = aggregate(data1[,13], list(data1$Climate), sum, na.rm=t)
div
div = aggregate(data1[,14], list(data1$Climate), sum, na.rm=t)
div
# 40. Climate with lowest forest volume per hectare
names(data1)
vol = aggregate(data1[,11], list(data1$Climate), sum, na.rm=T)
vol
